#include <bits/stdc++.h>
using namespace std;
#define int long long
using i64 = long long;
using u64 = unsigned long long;

const int MAX = 2e5 + 6;
int is_prime[MAX];
vector<int> prime;

void solve()
{
    int n;
    cin >> n;
    vector<int> a(n + 1);
    map<int, int> mp1, mp2, mp3;
    map<pair<int, int>, int> mp4;
    int ans = 0, sum = 0;
    for (int i = 1; i <= n; i++)
    {
        cin >> a[i];
        if (is_prime[a[i]])
        {
            auto x = a[i];
            mp3[x]++;
            sum++;
            ans += mp1[x];
            ans += mp2[x];
            ans += (sum - mp3[x]);
        }
        else
        {
            for (int j = 1; j * j <= a[i]; j++)
            {
                if (a[i] % j == 0 && is_prime[a[i] / j] && is_prime[j])
                {
                    if (j * j == a[i])
                    {
                        auto x = a[i] / j;
                        mp2[x]++;
                        ans += mp2[x];
                        ans += mp3[x];
                    }
                    else
                    {
                        auto x = j;
                        auto y = a[i] / j;
                        ans += mp3[x];
                        ans += mp3[y];
                        mp4[{x, y}]++;
                        ans += mp4[{x, y}];
                        mp1[x]++;
                        mp1[y]++;
                    }
                }
            }
        }
    }
    cout << ans << '\n';
}

signed main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    auto euler_Prime = [&](int n) -> void
    {
        vector<int> v(n + 1);
        for (int i = 2; i <= n; ++i)
        {
            if (!v[i])
            {
                v[i] = i;
                prime.push_back(i);
                is_prime[i] = 1;
            }
            for (int j = 0; j < prime.size(); ++j)
            {
                if (prime[j] > v[i] || prime[j] > n / i)
                    break;
                v[i * prime[j]] = prime[j];
            }
        }
    };
    euler_Prime(2e5 + 6);

    int T = 1;
    cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

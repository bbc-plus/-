#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using u64 = unsigned long long;

void solve()
{
    int n, c, d;
    cin >> n >> c >> d;

    int ans = 0;

    int tmp1, tmp2;
    tmp1 = tmp2 = 0;
    vector<pair<int, int>> a, b;
    for (int i = 1; i <= n; i++)
    {
        int val, weight;
        char ty;
        cin >> val >> weight >> ty;
        if (ty == 'C')
        {
            a.push_back({weight, val});
            if (weight <= c)
                tmp1 = max(tmp1, val);
        }
        else
        {
            b.push_back({weight, val});
            if (weight <= d)
                tmp2 = max(tmp2, val);
        }
    }
    if (tmp1 != 0 && tmp2 != 0)
        ans = max(ans, tmp1 + tmp2);

    sort(a.begin(), a.end());
    sort(b.begin(), b.end());
    vector<int> pmax1(a.size(), 0), pmax2(b.size(), 0);
    for (int i = 0; i < a.size(); i++)
    {
        if (i == 0)
            pmax1[i] = a[i].second;
        else
            pmax1[i] = max(pmax1[i - 1], a[i].second);
    }
    for (int i = 0; i < b.size(); i++)
    {
        if (i == 0)
            pmax2[i] = b[i].second;
        else
            pmax2[i] = max(pmax2[i - 1], b[i].second);
    }

    int l = -1, r = a.size() - 1;
    while (1)
    {
        if (r <= 0)
            break;
        while (l < r - 1)
        {
            if (c - a[r].first >= a[l + 1].first)
            {
                l++;
            }
            else
            {
                break;
            }
        }
        l = min(l, r - 1);
        if (l != -1)
            ans = max(ans, pmax1[l] + a[r].second);
        r--;
    }

    l = -1, r = b.size() - 1;
    while (1)
    {
        if (r <= 0)
            break;
        while (l < r - 1)
        {
            if (d - b[r].first >= b[l + 1].first)
            {
                l++;
            }
            else
            {
                break;
            }
        }
        l = min(l, r - 1);
        if (l != -1)
            ans = max(ans, pmax2[l] + b[r].second);
        r--;
    }

    cout << ans << '\n';
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}
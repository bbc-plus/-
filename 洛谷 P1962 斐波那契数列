#include <bits/stdc++.h>
using namespace std;
#define int long long
using i64 = long long;
using u64 = unsigned long long;

void solve()
{
    i64 n;
    cin >> n;
    const int mod = 1e9 + 7;
    map<i64, i64> mp;
    auto fib = [&](auto self, i64 x) -> i64
    {
        if (x <= 2)
        {
            return 1;
        }
        auto it = mp.find(x);
        if (it == mp.end())
        {
            i64 res;
            if (x & 1)
            {
                i64 a = self(self, (x - 1) / 2);
                i64 b = self(self, (x - 1) / 2 + 1);
                res = a * a + b * b;
            }
            else
            {
                i64 a = self(self, x / 2 - 1);
                i64 b = self(self, x / 2);
                res = 2 * a * b + b * b;
            }
            res %= mod;
            mp.insert({x, res});
            return res;
        }
        else
        {
            return it->second;
        }
    };
    cout << fib(fib, n) << '\n';
}

signed main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using u64 = unsigned long long;

void solve()
{
    int n, w, k;
    cin >> n >> w >> k;
    vector<pair<int, i64>> a(n);
    for (int i = 0; i < n; i++)
        cin >> a[i].first >> a[i].second;
    sort(a.begin(), a.end());
    vector<i64> pre(n), suf(n);
    priority_queue<i64, vector<i64>, greater<i64>> pq;
    i64 sum = 0;
    for (int i = n - 1; i >= 0; i--)
    {
        pq.push(a[i].second);
        sum += a[i].second;
        if (pq.size() > k)
            sum -= pq.top(), pq.pop();
        suf[i] = sum;
    }
    i64 maxn = 0;
    vector<i64> dp(w + 1, 0);
    for (int i = 0; i < n; i++)
    {
        for (int j = w; j >= a[i].first; j--)
            dp[j] = max(dp[j], dp[j - a[i].first] + a[i].second), maxn = max(maxn, dp[j]);
        pre[i] = maxn;
    }
    i64 ans = max(pre[n - 1], suf[0]);
    for (int i = 1; i < n; i++)
        ans = max(ans, pre[i - 1] + suf[i]);
    cout << ans << '\n';
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

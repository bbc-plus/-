#include <bits/stdc++.h>
using namespace std;
#define int long long
using i64 = long long;
using u64 = unsigned long long;

char g[3][3];
char tmp[3][3];
map<string, int> dis;

void copy()
{
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            g[i][j] = tmp[i][j];
        }
    }
}

string gtos()
{
    string res;
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            res.push_back(g[i][j]);
        }
    }
    return res;
}

void stog(string s)
{
    for (int i = 0; i < s.size(); i++)
    {
        tmp[i / 3][i % 3] = s[i];
    }
}

void rot(int i, int j)
{
    swap(g[0 + i][0 + j], g[0 + i][1 + j]);
    swap(g[1 + i][0 + j], g[1 + i][1 + j]);
    swap(g[0 + i][1 + j], g[1 + i][0 + j]);
}

void solve()
{
    queue<string> q;
    string beg = "123456789";
    q.push(beg);
    dis[beg] = 0;
    while (!q.empty())
    {
        string cur = q.front();
        q.pop();
        stog(cur);
        for (int i = 0; i < 2; i++)
        {
            for (int j = 0; j < 2; j++)
            {
                copy();
                rot(i, j);
                string to = gtos();
                if (dis.count(to))
                {
                    continue;
                }
                dis[to] = dis[cur] + 1;
                q.push(to);
            }
        }
    }
    int Q;
    cin >> Q;
    while (Q--)
    {
        for (int i = 0; i < 3; i++)
        {
            for (int j = 0; j < 3; j++)
            {
                cin >> g[i][j];
            }
        }
        string cur = gtos();
        cout << dis[cur] << '\n';
    }
}

signed main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

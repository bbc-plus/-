#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n, m;
    cin >> n >> m;
    vector<int> p(m);
    for (int i = 0; i < m; i++)
    {
        cin >> p[i];
    }
    vector<int> a(n), b(n), c(n); // 第i个表示城市i和城市i+1之间的费用
    for (int i = 1; i < n; i++)
    {
        cin >> a[i] >> b[i] >> c[i];
    }
    vector<int> d(n + 1); // 差分数组
    vector<int> cnt(n);   // 经过第i段铁路的次数

    for (int i = 0; i < m - 1; i++)
    {
        int st = min(p[i], p[i + 1]); // 起点
        int ed = max(p[i], p[i + 1]); // 终点
        d[st]++;
        d[ed]--;
        // 在cnt数组中区间[l,r)里的每个数加1，相当于在差分数组中d[l]++,d[r]--
    }

    cnt[0] = 0; // 初始化cnt[0]，便于根据差分数组求前缀和
    for (int i = 1; i < n; i++)
    {
        cnt[i] = cnt[i - 1] + d[i]; // 求前缀和，即为经过第i段铁路的次数
    }

    ll ans = 0; // 费用和

    for (int i = 1; i < n; i++)
    {
        ans += min(1ll * a[i] * cnt[i], 1ll * b[i] * cnt[i] + c[i]); // 贪心，取两种方案的最小值(费用和次数相乘会爆int，记得乘1ll)
    }

    cout << ans << '\n';

    return 0;
}

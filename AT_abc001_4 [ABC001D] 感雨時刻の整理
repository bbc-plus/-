#include <bits/stdc++.h>
using namespace std;
#define int long long
using i64 = long long;
using u64 = unsigned long long;

pair<int, int> front(int a, int b)
{
    int tmp = b % 10;
    b -= tmp;
    if (tmp >= 5)
    {
        b += 5;
    }
    return {a, b};
}

pair<int, int> back(int a, int b)
{
    int tmp = b % 10;
    b -= tmp;
    if (tmp > 0 && tmp <= 5)
    {
        b += 5;
    }
    else if (tmp > 5)
    {
        b += 10;
    }
    if (b == 60)
    {
        b = 0;
        a += 1;
    }
    return {a, b};
}

bool cmp1(pair<pair<int, int>, pair<int, int>> m1, pair<pair<int, int>, pair<int, int>> m2)
{
    int a1 = m1.first.first, b1 = m1.first.second;
    int a2 = m2.first.first, b2 = m2.first.second;
    if (a1 == a2)
    {
        return b1 < b2;
    }
    else
    {
        return a1 < a2;
    }
}

bool cmp2(pair<int, int> m1, pair<int, int> m2)
{
    if (m1.first == m2.first)
    {
        return m1.second <= m2.second;
    }
    else
    {
        return m1.first < m2.first;
    }
}

void out(int x)
{
    if (x < 10)
    {
        cout << 0 << x;
    }
    else
    {
        cout << x;
    }
}

void solve()
{
    int n;
    cin >> n;
    vector<pair<pair<int, int>, pair<int, int>>> time(n), ans;
    for (int i = 0; i < n; i++)
    {
        string s;
        cin >> s;
        time[i] = {front(stoi(s.substr(0, 2)), stoi(s.substr(2, 2))),
                   back(stoi(s.substr(5, 2)), stoi(s.substr(7, 2)))};
    }
    sort(time.begin(), time.end(), cmp1);

    ans.push_back(time[0]);
    for (int i = 1; i < n; i++)
    {
        if (cmp2(time[i].first, ans.back().second))
        {
            if (cmp2(ans.back().second, time[i].second))
            {
                ans.back().second = time[i].second;
            }
        }
        else
        {
            ans.push_back(time[i]);
        }
    }

    for (int i = 0; i < (int)ans.size(); i++)
    {
        out(ans[i].first.first);
        out(ans[i].first.second);
        cout << '-';
        out(ans[i].second.first);
        out(ans[i].second.second);
        cout << '\n';
    }
}

signed main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

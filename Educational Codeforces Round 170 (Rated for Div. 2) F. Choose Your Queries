#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using u64 = unsigned long long;

void solve()
{
    int n, q;
    cin >> n >> q;
    vector<int> x(q), y(q);
    vector<vector<array<int, 2>>> adj(n);
    for (int i = 0; i < q; i++)
    {
        cin >> x[i] >> y[i];
        x[i]--;
        y[i]--;
        adj[x[i]].push_back({y[i], 2 * i});
        adj[y[i]].push_back({x[i], 2 * i + 1});
    }
    vector<bool> vis(n, 0);
    vector<int> dep(n, 0);
    vector<string> ans(q, "zy");
    auto match = [&](int i, int j) -> void
    {
        ans[i / 2][1] = (i < j ? '+' : '-');
        ans[j / 2][1] = (i < j ? '-' : '+');
        ans[i / 2][0] = "xy"[i % 2];
        ans[j / 2][0] = "xy"[j % 2];
    };
    for (int s = 0; s < n; s++)
    {
        if (vis[s])
        {
            continue;
        }
        auto dfs = [&](auto &self, int x) -> int
        {
            vis[x] = 1;
            int last = -1;
            for (auto [y, i] : adj[x])
            {
                if (vis[y])
                {
                    if (dep[y] > dep[x])
                    {
                        if (last != -1)
                        {
                            match(last, i);
                            last = -1;
                        }
                        else
                        {
                            last = i;
                        }
                    }
                }
                else
                {
                    dep[y] = dep[x] + 1;
                    int res = self(self, y);
                    if (res != -1)
                    {
                        match(i ^ 1, res);
                    }
                    else
                    {
                        if (last != -1)
                        {
                            match(last, i);
                            last = -1;
                        }
                        else
                        {
                            last = i;
                        }
                    }
                }
            }
            return last;
        };
        dfs(dfs, s);
    }
    for (int i = 0; i < q; i++)
    {
        if (ans[i] == "zy")
            cout << "x+" << "\n";
        else
            cout << ans[i] << "\n";
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int T = 1;
    // cin >> T;
    while (T--)
    {
        solve();
    }

    return 0;
}

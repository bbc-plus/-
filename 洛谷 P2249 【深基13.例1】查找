#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

bool check(int a, int x) // 该处数组元素大于等于x则满足查找需求
{
    if (a >= x)
        return 1;
    else
        return 0;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int n, m;
    cin >> n >> m;
    vector<int> a(n); // 不递减数组
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    int x; // 询问的数字
    while (m--)
    {
        cin >> x;
        int l = 0, r = n - 1; // 上下界为数组索引的上下界
        // 二分查找数组中第一个大于等于x的位置
        while (l < r)
        {
            int mid = (l + r) / 2;
            if (check(a[mid], x)) // check函数自己写
            {
                r = mid; // 这里是 r = mid, 说明[l,mid]是合法范围
            }
            else
            {
                l = mid + 1; //  [l,mid]这个范围都不是合法范围，所以下一次查找直接从 l = mid + 1开始了
            }
        }
        // 最后得到的l和r相等，均为查找得到的位置，取其一即可
        if (a[l] == x) // 如果数组中存在数x，输出其位置
        {
            cout << l + 1 << ' '; // 由于数组下标从0开始，而题目要求从1开始，所以这里要加1
        }
        else // 如果不存在x，输出-1
        {
            cout << -1 << ' ';
        }
    }

    return 0;
}
